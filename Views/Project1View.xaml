<UserControl x:Class="GrafikaKomputerowa.Views.Project1View"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:pr1="clr-namespace:GrafikaKomputerowa.Models.Project1"
             xmlns:converters="clr-namespace:GrafikaKomputerowa.Converters"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
             xmlns:local="clr-namespace:GrafikaKomputerowa.Views"
             mc:Ignorable="d" d:DesignHeight="600" d:DesignWidth="800" dialog:DialogParticipation.Register="{Binding}">
    <UserControl.Resources>
        <converters:DoubleUpValueConverter x:Key="DoubleUpValueConverter"/>
    </UserControl.Resources>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="180"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <StackPanel Grid.Column="0" Background="LightGray">
            <StackPanel.Resources>
                <Style TargetType="GroupBox" BasedOn="{StaticResource {x:Type GroupBox}}">
                    <Setter Property="Margin" Value="15 5"/>
                </Style>
            </StackPanel.Resources>

            <GroupBox Header="Pomoc" Height="26" Cursor="Help" Margin="15 15 15 5" ToolTipService.ShowDuration="10000" ToolTip="LPM - Zmiana pozycji, zmiana rozmiaru&#10;PPM - Rysowanie wybranej figury&#10;DEL - Usunięcie aktualnie wybranej figury"/>

            <GroupBox Header="Figura">
                <WrapPanel HorizontalAlignment="Center" IsEnabled="{Binding IsFigureTypeChangeEnabled}">
                    <WrapPanel.Resources>
                        <Style TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
                            <Setter Property="Margin" Value="4 0"/>
                            <Setter Property="Width" Value="34"/>
                            <Setter Property="Height" Value="34"/>
                        </Style>
                    </WrapPanel.Resources>

                    <ToggleButton Padding="7" ToolTip="Linia" IsChecked="{Binding IsLineChecked}">
                        <Line X1="0" Y1="0" X2="30" Y2="30" StrokeThickness="2" Stroke="Black"/>
                    </ToggleButton>
                    <ToggleButton ToolTip="Prostokąt" IsChecked="{Binding IsRectangleChecked}">
                        <Rectangle Width="20" Height="20" StrokeThickness="2" Stroke="Black"/>
                    </ToggleButton>
                    <ToggleButton ToolTip="Koło" IsChecked="{Binding IsCircleChecked}">
                        <Ellipse Width="20" Height="20" StrokeThickness="2" Stroke="Black"/>
                    </ToggleButton>
                </WrapPanel>
            </GroupBox>

            <GroupBox Header="Kolor wypełnienia" Visibility="{Binding FillColorVisibility}">
                <mah:ColorPicker SelectedColor="{Binding CurrentFigure.FillColor}"/>
            </GroupBox>

            <GroupBox Header="Kolor zarysu">
                <mah:ColorPicker SelectedColor="{Binding CurrentFigure.StrokeColor}"/>
            </GroupBox>

            <GroupBox Header="Grubość zarysu">
                <mah:NumericUpDown Minimum="1" Value="{Binding CurrentFigure.StrokeThickness}"/>
            </GroupBox>

            <StackPanel Visibility="{Binding LineParametersVisibility}">
                <GroupBox Header="Punkt początkowy - X">
                    <mah:NumericUpDown Minimum="0" Value="{Binding CurrentLine.X1}"/>
                </GroupBox>

                <GroupBox Header="Punkt początkowy - Y">
                    <mah:NumericUpDown Minimum="0" Value="{Binding CurrentLine.Y1}"/>
                </GroupBox>

                <GroupBox Header="Punkt końcowy - X">
                    <mah:NumericUpDown Minimum="1" Value="{Binding CurrentLine.X2}"/>
                </GroupBox>

                <GroupBox Header="Punkt końcowy - Y">
                    <mah:NumericUpDown Minimum="1" Value="{Binding CurrentLine.Y2}"/>
                </GroupBox>
            </StackPanel>

            <StackPanel Visibility="{Binding RectangleParametersVisibility}">
                <GroupBox Header="Lewy górny róg - X">
                    <mah:NumericUpDown Minimum="0" Value="{Binding CurrentFigure.X}"/>
                </GroupBox>

                <GroupBox Header="Lewy górny róg - Y">
                    <mah:NumericUpDown Minimum="0" Value="{Binding CurrentFigure.Y}"/>
                </GroupBox>

                <GroupBox Header="Szerokość">
                    <mah:NumericUpDown Minimum="1" Value="{Binding CurrentRectangle.Width}"/>
                </GroupBox>

                <GroupBox Header="Wysokość">
                    <mah:NumericUpDown Minimum="1" Value="{Binding CurrentRectangle.Height}"/>
                </GroupBox>
            </StackPanel>

            <StackPanel Visibility="{Binding CircleParametersVisibility}">
                <GroupBox Header="Punkt środkowy - X">
                    <mah:NumericUpDown Minimum="0" Value="{Binding CurrentCircle.CenterPointX}"/>
                </GroupBox>

                <GroupBox Header="Punkt środkowy - Y">
                    <mah:NumericUpDown Minimum="0" Value="{Binding CurrentCircle.CenterPointY}"/>
                </GroupBox>

                <GroupBox Header="Promień">
                    <mah:NumericUpDown Minimum="1" Value="{Binding CurrentCircle.Radius}"/>
                </GroupBox>
            </StackPanel>

            <Button Margin="15 5" Background="ForestGreen" ToolTip="Dodaj figurę" Command="{Binding AddFigureCommand}" Visibility="{Binding AddFigureButtonVisibility}">
                <WrapPanel HorizontalAlignment="Center">
                    <fa:ImageAwesome Icon="Plus" Height="20" Foreground="White"/>
                </WrapPanel>
            </Button>

            <Button Margin="15 5" Background="Red" ToolTip="Usuń figurę" Command="{Binding RemoveFigureCommand}" Visibility="{Binding RemoveFigureButtonVisibility}">
                <WrapPanel HorizontalAlignment="Center">
                    <fa:ImageAwesome Icon="Times" Height="20" Foreground="White"/>
                </WrapPanel>
            </Button>
        </StackPanel>

        <Border Grid.Column="1" BorderBrush="LightGray" BorderThickness="0 15 12 15">
            <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                <ItemsControl ItemsSource="{Binding Figures}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas Background="Transparent">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                        <i:InvokeCommandAction Command="{Binding CanvasPreviewMouseLeftButtonDownCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Canvas}}}"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="MouseLeftButtonDown">
                                        <i:InvokeCommandAction Command="{Binding CanvasMouseLeftButtonDownCommand}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="MouseMove">
                                        <i:InvokeCommandAction Command="{Binding CanvasMouseMoveCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Canvas}}}"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="MouseLeftButtonUp">
                                        <i:InvokeCommandAction Command="{Binding CanvasMouseLeftButtonUpCommand}"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="MouseRightButtonDown">
                                        <i:InvokeCommandAction Command="{Binding CanvasMouseRightButtonDownCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Canvas}}}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Canvas>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemContainerStyle>
                        <Style>
                            <Setter Property="Canvas.Left" Value="{Binding X}"/>
                            <Setter Property="Canvas.Top" Value="{Binding Y}"/>
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                    <ItemsControl.Resources>
                        <DataTemplate DataType="{x:Type pr1:Line}">
                            <Line X1="{Binding X1}" Y1="{Binding Y1}" X2="{Binding X2}" Y2="{Binding Y2}" StrokeThickness="{Binding StrokeThickness}" Stroke="{Binding StrokeColorBrush}"/>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type pr1:Rectangle}">
                            <Rectangle Width="{Binding Width}" Height="{Binding Height}" StrokeThickness="{Binding StrokeThickness}" Stroke="{Binding StrokeColorBrush}" Fill="{Binding FillColorBrush}"/>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type pr1:Circle}">
                            <Ellipse Width="{Binding Radius, Converter={StaticResource DoubleUpValueConverter}}" Height="{Binding Radius, Converter={StaticResource DoubleUpValueConverter}}" StrokeThickness="{Binding StrokeThickness}" Stroke="{Binding StrokeColorBrush}" Fill="{Binding FillColorBrush}"/>
                        </DataTemplate>
                    </ItemsControl.Resources>
                </ItemsControl>
            </ScrollViewer>
        </Border>
    </Grid>
</UserControl>
